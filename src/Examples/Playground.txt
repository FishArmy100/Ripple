

concept Intager where STD::IsIntagral<This>() {}

class IntagerSequence<T, int... indexes> where T is Intager {}

$eval var GenIntagerSequence<T, T first, T... rest>() where T is Intager
{
	$if (first == 0)
		return IntagerSequence<T, first, rest...>();
	else
		return GenIntagerSequence<T, first - 1, first - 1, rest...>();
}

void PrintSequence<T, T... sequence>() where T is Intager
{
	STD::Println(sequence);... // work in progress
}

int Main()
{
	PrintSequence(GenIntagerSequence<size_t, 4>());
	/* prints out:
	0
	1
	2
	3
	*/
}